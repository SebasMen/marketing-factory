/**
 * This is not a production server yet!
 * This is only a minimal backend to get started.
 */
import 'reflect-metadata';
import { Logger } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { AppModule } from './app/app.module';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import session from 'express-session';
import passport from 'passport';
import { AppModule } from './app/app.module';
import { CustomAuthExceptionFilter } from './common/exception.filter';
import helmet from 'helmet';
import _ from 'lodash';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  const globalPrefix = '<%= name %>';
  app.setGlobalPrefix(globalPrefix);
  app.enableCors();

  app.use(
    session({
      secret: process.env.JWT_SECRET,
      resave: false,
      saveUninitialized: false,
      cookie: {
        maxAge: 1 * 60 * 1000, // 5 minutes
        httpOnly: true,
        secure: isQAEnv() && isProdEnv(),
      },
    }),
  );

  app.use(passport.initialize());
  app.use(passport.session());

  app.useGlobalFilters(new CustomAuthExceptionFilter());

  const config = new DocumentBuilder()
    .setTitle(`Marketing Factory - MS ${_.startCase(globalPrefix)} API`)
    .setDescription(`The following describes the documentation for using the ${_.startCase(globalPrefix)} MS APIs.`)
    .setVersion('1.0')
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup(`${globalPrefix}/docs`, app, document);

  // somewhere in your initialization file
  app.use(helmet());

  const port = <%= port %>;
  await app.listen(port);
  Logger.log(
    `ðŸš€ Application is running on: http://localhost:${port}/${globalPrefix}`
  );
}

bootstrap();
